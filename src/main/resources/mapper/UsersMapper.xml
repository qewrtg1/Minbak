<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.minbak.web.users.UsersMapper">

    <!-- 회원가입 -->
    <insert id="createUser" parameterType="com.minbak.web.users.UserDto" useGeneratedKeys="true" keyProperty="userId">
        INSERT INTO users (name, email, phone_number, password)
        VALUES (#{name}, #{email}, #{phoneNumber}, #{password})
    </insert>

    <!-- 역할 조회 -->
    <select id="findRoleByRoleId" resultType="String">
        SELECT role FROM roles WHERE role_id = #{roleId}
    </select>

    <!-- 특정 사용자 ID로 역할 조회 -->
    <select id="findRolesByUserId" resultType="com.minbak.web.users.RoleDto">
        SELECT r.*
        FROM roles r
        JOIN users_roles ur ON ur.role_id = r.role_id
        WHERE ur.user_id = #{userId}
    </select>

    <!-- 사용자 역할 삽입 -->
    <insert id="createUserRoleByUserIdAndRoleId">
        INSERT INTO users_roles (user_id, role_id)
        VALUES (#{userId}, #{roleId})
    </insert>

    <!-- 이메일로 사용자 조회 -->
    <select id="findUserEmailByEmail" resultType="String">
        SELECT email FROM users WHERE email = #{email}
    </select>

    <!-- 이메일로 사용자 전체 조회 -->
    <select id="findUserByEmail" resultType="com.minbak.web.users.UserDto">
        SELECT *
        FROM users WHERE email = #{email}
    </select>

    <!-- 아이디로 사용자 전체 조회 -->
    <select id="findUserByUserId" resultType="com.minbak.web.users.UserDto">
        SELECT *
        FROM users WHERE user_id = #{UserId}
    </select>

    <!-- limit와 offset값에 따라 게시글 조회 -->
    <select id="findUsersByLimitAndOffset" resultType="com.minbak.web.users.UserDto">
        select * from users
        order by user_id DESC
        limit #{limit} offset #{offset};
    </select>

    <!-- limit와 offset값, 그리고 문자열값에 따라 게시글 조회 -->
    <select id="findUsersByLimitAndOffsetAndString" resultType="com.minbak.web.users.UserDto">
        SELECT *
        FROM users
        WHERE name LIKE CONCAT('%', #{search}, '%') OR email LIKE CONCAT('%', #{search}, '%')
        ORDER BY user_id DESC
        LIMIT #{limit} OFFSET #{offset}
    </select>

    <!-- 모든 유저 수 체크 -->
    <select id="countAllUsers" resultType="int">
        select count(*) from users;
    </select>

    <!--검색에 해당하는 유저 수 체크-->
    <select id="countUsersBySearch" resultType="int">
        SELECT COUNT(*)
        FROM users
        WHERE name LIKE CONCAT('%', #{search}, '%') OR email LIKE CONCAT('%', #{search}, '%')
    </select>

    <!--해당 role을 가진 유저 가져오기-->
    <select id="countUserRolesByRoleId" resultType="int">
        SELECT COUNT(*)
        FROM users_roles
        WHERE role_id = #{roleId}
    </select>

    <!--오늘 가입한 유저 수 가져오기-->
    <select id="countUsersJoinedToday" resultType="int">
        SELECT count(*)
        FROM users
        WHERE DATE(created_at) = CURRENT_DATE
    </select>

    <!--지난 7일간 요일별 가입자 수-->
    <select id="countUsersJoinedByWeekday" resultType="map">
        SELECT
        DAYOFWEEK(created_at) AS weekday,
        COUNT(*) AS count
        FROM
        users
        WHERE
        created_at >= CURDATE() - INTERVAL 7 DAY
        GROUP BY
        DAYOFWEEK(created_at)
        ORDER BY
        weekday
    </select>

    <!-- 사용자 정보 업데이트 -->
    <update id="updateUserByIdWithoutPassword" parameterType="com.minbak.web.users.UserDto">
        UPDATE users
        SET
        name = #{name},
        email = #{email},
        phone_number = #{phoneNumber},
        enabled = #{enabled}
        WHERE user_id = #{userId}
    </update>

    <!--해당 유저의 간략 결제 정보 가져오기-->
    <select id="findUsersPaymentsCompactInfoByLimitAndOffsetAndUserId" resultType="com.minbak.web.payments.PaymentDto">
        SELECT
        p.payment_id,
        p.amount,
        p.created_at,
        r.name AS room_name
        FROM
        payments p
        JOIN
        books b ON p.book_id = b.book_id
        JOIN
        rooms r ON b.room_id = r.room_id
        WHERE
        p.user_id = #{userId}
    </select>

    <!--해당 유저의 결제 개수-->
    <select id="countPaymentsByUserId">
        SELECT COUNT(*)
        FROM payments
        WHERE user_id = #{userId}
    </select>
</mapper>